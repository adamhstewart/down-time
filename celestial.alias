<drac2>
#Define variables for later use
cc = "Celestial Revelation"
rest = "You canâ€™t transform again until you finish a Long Rest."
noCC = "You do not have this ability."
ch=character()
c=combat()
args = &ARGS&

##Check if we are in combat.
if not c:
    err('This channel is not in combat.')

# Setup type based on argument.
if "heavenly" in args:
    type = "Heavenly Wings"
    dbonus = "2[radiant]"
    desc = "Two spectral wings sprout from your back temporarily. Until the transformation ends, you have a Fly Speed equal to your Speed."
    sdesc = "You can fly at your speed until the end of the duration."
elif "radiance" in args:
    type = "Inner Radiance"
    dbonus = "2[radiant]"
    rbonus = proficiencyBonus
    desc = "Searing light temporarily radiates from your eyes and mouth. For the duration, you shed Bright Light in a 10-foot radius and Dim Light for an additional 10 feet, and at the end of each of your turns, each creature within 10 feet of you takes Radiant damage equal to your Proficiency Bonus."
    sdesc = f'Each creature within 10ft takes +{rbonus} Radiant damage.'
elif "necrotic" in args:
    type = "Necrotic Shroud"
    dbonus = "2[necrotic]"
    csave = 8+ proficiencyBonus + charismaMod
    desc = "Your eyes briefly become pools of darkness, and flightless wings sprout from your back temporarily. Creatures other than your allies within 10 feet of you must succeed on a Charisma saving throw (DC 8 plus your Charisma modifier and Proficiency Bonus) or have the Frightened condition until the end of your next turn."
    sdesc = f'Enemy creatures within 10ft must succeed on a DC {csave} Charisma saving throw or have the Frightened condition until end of your next turn.'
else:
    err(f'''You must provide an argument for the type Celestial Revelation you will use. Options are `heavenly`, `radiance`, and `necrotic`.''')

#Create the counter if it should exist but doesn't already
if ch.race.lower() == "aasimar" and ch.levels.total_level >= 3:
    ch.create_cc_nx(cc, 0, 1, "long", "bubble", None, None, cc, desc+" "+rest)

#Logic of the alias. Check for all the necessary conditions.
succ = "tries to use"
if ch.cc_exists(cc) and ch.get_cc(cc):
    succ = "uses"
    D = desc
    ch.mod_cc(cc, -1)
    c.me.add_effect("Celestial Revelation", duration=10, passive_effects={"damage_bonus": dbonus}, desc=f'{sdesc}')
elif ch.cc_exists(cc):
    D = rest
else:
    D = noCC

## Build the embed.
T = f"{name} {succ} {cc}: {type}!"
F = f"{cc}|{ch.cc_str(cc) if ch.cc_exists(cc) else '*None*'}"

base = f'''embed -title "{T}" -color {color} -thumb {image} -desc "{D}" -f "{F}"'''
return base
</drac2>
